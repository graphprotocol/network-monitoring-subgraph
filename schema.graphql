type GlobalState @entity {
  id: ID!
  oracles: [Oracle!]! @derivedFrom(field: "state")
  activeOracles: [Oracle!]!
}

type Oracle @entity {
  id: Bytes! # address
  index: String! # oracle_index
  state: GlobalState!
  latestConfig: OracleConfiguration!
  configurations: [OracleConfiguration!]! @derivedFrom(field: "oracle")
  votes: [OracleVote!]! @derivedFrom(field: "oracle")
  active: Boolean!
  activeSince: BigInt!
  activeUntil: BigInt! # 0 means active
}

type OracleVote @entity(immutable: true) {
  id: ID!
  oracle: Oracle!
  subgraphDeploymentID: Bytes! # bytes32
  deny: Boolean! # bool
  timestamp: BigInt! # uint256
}

type OracleConfiguration @entity(immutable: true) {
  id: ID!
  oracle: Oracle!
  version: String!
  ipfsConcurrency: String!
  ipfsTimeout: String!
  minSignal: String!
  period: String!
  gracePeriod: String!
  supportedDataSourceKinds: String!
  networkSubgraphDeploymentId: String!
  epochBlockOracleSubgraphDeploymentId: String!
  subgraphAvailabilityManagerContract: String!
  oracleIndex: String!
  createdAt: BigInt!
}